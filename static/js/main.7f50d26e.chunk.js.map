{"version":3,"sources":["DataEntry.jsx","Todo.jsx","TodoApp.jsx","App.jsx","index.jsx"],"names":["DataEntry","props","inputValue","onChangeInput","onPressEnterInput","onClickButton","buttonText","className","style","height","fontSize","placeholder","value","onChange","event","target","onPressEnter","marginLeft","backgroundColor","color","border","onClick","Todo","element","updateTodo","removeToDo","useState","edit","setEdit","editValue","setEditValue","done","complete","setComplete","editElement","editSubmit","id","evt","Fragment","checked","icon","faPen","margin","faTrash","ToDoApp","uuid","todoList","setTodoList","hiddenAdd","setHiddenAdd","setInputValue","editedList","map","el","filter","allTodo","key","faTimes","faPlus","e","App","TodoApp","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7f50d26e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Input, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport \"./styles.css\";\n\nconst DataEntry = (props) => {\n  const {\n    inputValue,\n    onChangeInput,\n    onPressEnterInput,\n    onClickButton,\n    buttonText\n  } = props;\n\n  return (\n    <div className=\"inputStyle\">\n      <Input\n        style={{ height: \"40px\", fontSize: \"20px\" }}\n        placeholder=\"Write...\"\n        value={inputValue}\n        onChange={(event) => onChangeInput(event.target.value)}\n        onPressEnter={(event) => onPressEnterInput(event.target.value)}\n      />\n      <Button\n        style={{\n          height: \"40px\",\n          marginLeft: \"15px\",\n          backgroundColor: \"#a0d911\",\n          color: \"black\",\n          border: \"1px #a0d911\"\n        }}\n        onClick={() => onClickButton()}\n      >\n        <p style={{ fontSize: \"20px\" }}>{buttonText}</p>\n      </Button>\n    </div>\n  );\n};\n\nexport default DataEntry;\n","import React, { useState } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { Checkbox } from \"antd\";\nimport DataEntry from \"./DataEntry\";\nimport \"antd/dist/antd.css\";\n\nimport \"./todo.css\";\n\nconst Todo = (props) => {\n  const { element, updateTodo, removeToDo } = props;\n  const [edit, setEdit] = useState(false);\n  const [editValue, setEditValue] = useState(element.value);\n  const [complete, setComplete] = useState(element.done || false);\n\n  const editElement = () => {\n    setEdit(!edit);\n  };\n\n  const removeElement = (evt) => {\n    removeToDo(element.id);\n  };\n\n  const editOnChange = (evt) => {\n    setEditValue(evt);\n  };\n\n  const editSubmit = () => {\n    if (editValue) {\n      editElement();\n      updateTodo(element.id, editValue);\n    }\n  };\n\n  return (\n    <div id={element.id} className=\"todoContainer\">\n      {edit ? (\n        <DataEntry\n          inputValue={editValue}\n          onChangeInput={editOnChange}\n          onPressEnterInput={editSubmit}\n          onClickButton={editSubmit}\n          buttonText=\"Edit\"\n        />\n      ) : (\n        <React.Fragment>\n          <Checkbox\n            className=\"green\"\n            checked={complete}\n            onChange={() => setComplete(!complete)}\n          />\n          <p className={complete ? \"textTodo completedTodo\" : \"textTodo\"}>\n            {element.value}\n          </p>\n          <div\n            className=\"iconContainer\"\n            onClick={(event) => editElement(event)}\n          >\n            <div className=\"icon\">\n              <FontAwesomeIcon\n                icon={faPen}\n                style={{ fontSize: \"20px\", color: \"#597ef7\", margin: \"0 auto\" }}\n              />\n            </div>\n            <div className=\"icon\" onClick={() => removeElement()}>\n              <FontAwesomeIcon\n                icon={faTrash}\n                style={{ fontSize: \"20px\", color: \"#ff4d4f\", margin: \"0 auto\" }}\n              />\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { v4 as uuid } from \"uuid\";\nimport DataEntry from \"./DataEntry\";\nimport \"antd/dist/antd.css\";\n\nimport Todo from \"./Todo\";\nimport \"./styles.css\";\n\nconst ToDoApp = () => {\n  const [todoList, setTodoList] = useState([\n    { id: uuid(), value: \"Keep learning\" },\n    { id: uuid(), value: \"Have a coffee\" },\n    { id: uuid(), value: \"Climb a mountain\", done: true },\n    { id: uuid(), value: \"Read a book\" },\n  ]);\n\n  const [hiddenAdd, setHiddenAdd] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const inputChange = (e) => {\n    if (e) {\n      const el = { id: uuid(), value: e };\n      setTodoList([...todoList, el]);\n      setInputValue(\"\");\n    }\n  };\n\n  const buttonChange = () => {\n    if (inputValue) {\n      const el = { id: uuid(), value: inputValue };\n      setTodoList([...todoList, el]);\n      setInputValue(\"\");\n    }\n  };\n  const handleChange = (evt) => {\n    setInputValue(evt);\n  };\n\n  const updateTodo = (id, value) => {\n    const editedList = todoList.map((el) => {\n      el = el.id === id ? { ...el, value: value } : { ...el };\n      return el;\n    });\n    setTodoList(editedList);\n  };\n\n  const removeToDo = (id) => {\n    const editedList = todoList.filter((el) => el.id !== id);\n    setTodoList(editedList);\n  };\n\n  const allTodo = todoList.map((el) => {\n    return (\n      <Todo\n        key={\"todo_\" + el.id}\n        element={el}\n        updateTodo={updateTodo}\n        removeToDo={removeToDo}\n      />\n    );\n  });\n\n  return (\n    <div className=\"container\">\n      <p className=\"title\">To do List</p>\n\n      <div className=\"content\">\n        <div\n          className={!hiddenAdd ? \"addButton\" : \"addButton red\"}\n          onClick={() => setHiddenAdd(!hiddenAdd)}\n        >\n          <FontAwesomeIcon\n            icon={!hiddenAdd ? faPlus : faTimes}\n            style={{ fontSize: \"20px\", color: \"white\", margin: \"0 auto\" }}\n          />\n        </div>\n        {hiddenAdd && (\n          <DataEntry\n            inputValue={inputValue}\n            onChangeInput={handleChange}\n            onPressEnterInput={inputChange}\n            onClickButton={buttonChange}\n            buttonText=\"Add\"\n          />\n        )}\n        {allTodo}\n      </div>\n    </div>\n  );\n};\n\nexport default ToDoApp;\n","import React from \"react\";\nimport \"./styles.css\";\nimport TodoApp from \"./TodoApp\";\nexport default function App() {\n  return (\n    <div>\n      <TodoApp />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}